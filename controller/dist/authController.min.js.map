{"version":3,"sources":["authController.js"],"names":["asyncHandler","require","AppError","jwt","exports","signup","req","res","user","token","regeneratorRuntime","async","_context","prev","next","awrap","User","create","name","body","email","password","createToken","passwordConfirm","sent","_id","status","json","data","stop","login","_req$body","_context2","findOne","t0","correctPassword"],"mappings":"aAAA,IAAMA,aAAeC,QAAQ,yBACvBC,SAAWD,QAAQ,qBADnBD,KAAAA,QAAeC,kBAGfE,IAAMF,QAAQ,gBAFdC,YAAWD,QAAQ,wBAIzBG,QAAQC,OAASL,aAAa,SAAOM,EAAKC,GAAZ,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAHTC,KAAAC,OAAD,CAKhBC,KAAMZ,EAAIa,KAAKD,KAJbf,MAAMF,EAAAA,KAAQmB,MAMhBC,SAAUf,EAAIa,KAAKE,SALjBC,gBAAcrB,EAAOkB,KAACI,mBACE,KAAA,EAHpBf,EAGoBI,EAAAY,KAAtBnB,EAASL,YAAaQ,EAAAiB,IAAAnB,EAAAC,GAAAA,EAAAmB,OAAA,KAAAC,KAAA,CAAAD,OAAA,UAAAjB,MAAAA,EAAAmB,KAAApB,IAAA,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAAiB,YAAAzB,QAAA0B,MAAA9B,aAAA,SAAAM,EAAAC,EACHO,GADG,IAAAiB,EAAAX,EAAAC,EAAAb,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAAAiB,EACKzB,EAAAa,KAC/BD,EAF0Ba,EAE1Bb,MAAMZ,EAFoByB,EAEpBzB,SACNc,GAAOd,GACPe,EAAAA,IAAAA,SAAcF,uCAHiB,MADLa,EAAAlB,KAAA,EAAAJ,mBAAAK,MAAAC,KAAAiB,QAAA,CAAAb,MAAAA,KAAA,KAAA,EAAA,GACKZ,EADLwB,EAAAR,KAAAQ,EAAAE,IAoBrB1B,EApBqBwB,EAAAE,GAAA,CAAAF,EAAAlB,KAAA,GAAA,MAAA,OAAAkB,EAAAlB,KAAA,EAAAJ,mBAAAK,MAoBLP,EAAK2B,gBAAgBd,EAASb,EAAKa,WApB9B,KAAA,EAAAW,EAAAE,IAAAF,EAAAR,KAAA,KAAA,GAAA,IAAAQ,EAAAE,GAAA,CAAAF,EAAAlB,KAAA,GAAA,MAAAA,EAAA,IAAAZ,SAAA,+BAAA,MAAA,KAAA,GAOpBO,EAAQa,YAAYd,EAAKiB,IAANnB,EAAAC,GACzBA,EAAAA,OAAImB,KAAJC,KAAA,CACID,OAAAA,UACAjB,MAAAA,IAVsB,KAAA,GAAA,IAAA,MAAA,OAAAuB,EAAAH","file":"authController.min.js","sourcesContent":["const asyncHandler = require('express-async-handler');\r\nconst AppError = require('../utils/AppError');\r\nconst User = require('../models/user');\r\nconst jwt = require('jsonwebtoken');\r\nconst createToken = require('../utils/createToken');\r\nexports.signup = asyncHandler(async (req, res, next) => {\r\n    const user = await User.create({\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    password: req.body.password,\r\n    passwordConfirm: req.body.passwordConfirm,\r\n    });\r\n    const token = createToken(user._id,req, res);\r\n    res.status(201).json({\r\n        status: 'success',\r\n        token,\r\n        data: user,\r\n  });\r\n})\r\nexports.login = asyncHandler(async (req, res, next) => {\r\n    const { email, password } = req.body;\r\n    if (!email || !password) {\r\n        next(new AppError(\" you should enter email and password\", 400));\r\n    }\r\n    const user = await User.findOne({ email });\r\n    if (!user || !(await user.correctPassword(password,user.password))) {\r\n         next(new AppError(\" Incorrect email or password\", 401));\r\n    }\r\n    const token = createToken(user._id,req, res);\r\n    res.status(200).json({\r\n        status: \"success\",\r\n        token\r\n    })\r\n\r\n})"]}