{"version":3,"sources":["messageController.js"],"names":["asyncHandler","require","Message","Chat","exports","sendMessage","req","res","_req$body","content","chatId","message","regeneratorRuntime","async","_context","prev","next","body","awrap","create","sender","user","id","sent","console","log","populate","path","select","User","findByIdAndUpdate","latestMessage","status","json","data","stop","getMessages","messages","_context2","params","find","chat"],"mappings":"aAAA,IAAMA,aAAeC,QAAQ,yBACvBC,QAAUD,QAAQ,qBADlBD,KAAAA,QAAeC,kBAGfE,KAAOF,QAAQ,kBAErBG,QAAQC,YAAcL,aAAa,SAAOM,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAR,EAHdF,EAArBW,KAAahB,EAGsBO,EAHtBP,QAAQS,EAGcF,EAHdE,OAGcI,EAAAE,KAAA,EAAAJ,mBAAAM,MAEXhB,QAAQiB,OAAO,CAJ7BC,OAAGnB,EAAQoB,KAAAC,GAMbb,QAAAA,EAJAJ,KAAAA,KAA2B,KAAA,EAAA,OAE3BM,EAF2BG,EAAAS,KAO/BC,QAAQC,IAAId,GAPmBG,EAAAE,KAAA,EAAAJ,mBAAAM,MAAAhB,QAAAwB,SAAAf,EAAA,CAAAgB,KAAA,SAAAC,OAAA,gBAAA,KAAA,EAAA,OAAAjB,EAAAG,EAAAS,KAAAC,QAAAC,IAAAd,EAAA,QAAAG,EAAAE,KAAA,GAAAJ,mBAAAM,MAAAhB,QAAAwB,SAAAf,EAAA,CAAAgB,KAAA,UAAA,KAAA,GAAA,OAAAhB,EAAAG,EAAAS,KAAAC,QAAAC,IAAAd,EAAA,MAAAG,EAAAE,KAAA,GAAAJ,mBAAAM,MAAAW,KACAH,SAAvBjB,EADuB,CAAAkB,KAAA,aACdjB,OADc,sBAAA,KAAA,GAAA,OAAAC,EAAAG,EAAAS,KAAAT,EAAAE,KAAA,GAAAJ,mBAAAM,MAAAf,KAAA2B,kBAAApB,EAAA,CAAAqB,cAAApB,KAAA,KAAA,GAI3BF,QAAAA,IAAAA,EAAAA,MAF+BF,EAAAyB,OAFJ,KAAAC,KAAA,CAmB3BD,OAAQ,UAnBmBE,KAAAvB,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAAqB,YAAA/B,QAAAgC,YAAApC,aAAA,SAAAM,EAAAC,GAAA,IAAAG,EAAA2B,EAAA,OAAAzB,mBAAAC,MAAA,SAAAyB,GAAA,OAAA,OAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,KAAA,EAAA,OAAAN,EAAAJ,EAAAiC,OAAA7B,OAAA4B,EAAAtB,KAAA,EAAAJ,mBAAAM,MAQUhB,QAAAsC,KAAA,CAAAC,KAAA/B,IAAkBkB,SAAM,QAAEF,SAAA,SAAA,qBARpC,KAAA,EAQYC,EARZW,EAAAf,KAQUhB,EAAAyB,OARV,KAAAC,KAAA,CA4B3BD,OAAQ,UA5BmBE,KAAAG,IAAA,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAAH","file":"messageController.min.js","sourcesContent":["const asyncHandler = require('express-async-handler');\r\nconst Message = require('../models/message');\r\nconst User = require('../models/user');\r\nconst Chat = require('../models/chat');\r\n\r\nexports.sendMessage = asyncHandler(async (req, res, next) => {\r\n    const { content, chatId } = req.body;\r\n    let message = await Message.create({\r\n        sender: req.user.id,\r\n        content,\r\n        chat: chatId\r\n    })\r\n    console.log(message)\r\n    message = await Message.populate(message,{ path: 'sender', select: 'name image' })\r\n    console.log(message+\"bhbh\")\r\n    message = await Message.populate(message, { path: 'chat' })\r\n    console.log(message+\"nb\")\r\n    message = await User.populate(message, { path: 'chat.users', select: 'name image email' })\r\n    await Chat.findByIdAndUpdate(chatId, {\r\n       latestMessage: message\r\n    })\r\n    console.log(message+\"nb\")\r\n\r\n    res.status(201).json({\r\n        status: \"success\",\r\n        data: message\r\n    })  \r\n})\r\nexports.getMessages = asyncHandler(async (req, res, next) => {\r\n    const { chatId } = req.params;\r\n    const messages = await Message.find({ chat: chatId })\r\n        .populate('chat').populate('sender', 'name image email');\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data:messages\r\n    })\r\n\r\n})"]}