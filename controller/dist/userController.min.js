"use strict";var User=require("../models/user"),asyncHandler=require("express-async-handler"),AppError=require("../utils/AppError"),mongoose=require("mongoose");exports.getUsers=asyncHandler(function(e,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.find());case 2:n=e.sent,r.status(200).json({status:"success",result:n.length,data:n});case 4:case"end":return e.stop()}})}),exports.getOneUser=asyncHandler(function(r,n,t){var s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.params.id,mongoose.Types.ObjectId.isValid(s)){e.next=3;break}return e.abrupt("return",t(new AppError("Invalid user ID format",400)));case 3:return e.next=5,regeneratorRuntime.awrap(User.findById(s));case 5:if(a=e.sent){e.next=8;break}return e.abrupt("return",t(new AppError("user not found",404)));case 8:n.status(200).json({status:"success",data:a});case 9:case"end":return e.stop()}})}),exports.createUser=asyncHandler(function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.create({name:r.body.name,email:r.body.email,password:r.body.password,passwordConfirm:r.body.passwordConfirm}));case 2:t=e.sent,n.status(201).json({status:"success",data:t});case 4:case"end":return e.stop()}})}),exports.updateUser=asyncHandler(function(r,n,t){var s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.params.id,mongoose.Types.ObjectId.isValid(s)){e.next=3;break}return e.abrupt("return",t(new AppError("Invalid user ID format",400)));case 3:return e.next=5,regeneratorRuntime.awrap(User.findById(s));case 5:if(e.sent){e.next=8;break}return e.abrupt("return",t(new AppError("user not found",404)));case 8:return e.next=10,regeneratorRuntime.awrap(User.findByIdAndUpdate(s,r.body,{runValidators:!0,new:!0}));case 10:a=e.sent,n.status(200).json({status:"success",data:a});case 12:case"end":return e.stop()}})}),exports.deleteUser=asyncHandler(function(r,n,t){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.params.id,mongoose.Types.ObjectId.isValid(s)){e.next=3;break}return e.abrupt("return",t(new AppError("Invalid user ID format",400)));case 3:return e.next=5,regeneratorRuntime.awrap(User.findByIdAndDelete(s));case 5:if(e.sent){e.next=8;break}return e.abrupt("return",t(new AppError("user not found",404)));case 8:return e.abrupt("return",n.status(200).json({status:"succes",message:"user is deleted"}));case 9:case"end":return e.stop()}})});
//# sourceMappingURL=userController.min.js.map
