{"version":3,"sources":["userController.js"],"names":["User","require","asyncHandler","AppError","mongoose","exports","getUsers","req","res","next","find","users","status","json","result","length","data","getOneUser","id","params","Types","ObjectId","isValid","findById","user","createUser","create","name","body","email","password","passwordConfirm","updateUser","findByIdAndUpdate","runValidators","newUser","deleteUser","findByIdAndDelete","message"],"mappings":"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","sourcesContent":["const User = require(\"../models/user\");\r\nconst asyncHandler = require('express-async-handler');\r\nconst AppError=require('../utils/AppError');\r\nconst mongoose = require(\"mongoose\");\r\n    \r\nexports.getUsers = asyncHandler(async (req, res, next) => {\r\n    const users = await User.find();\r\n    res.status(200).json({\r\n        status: \"success\",\r\n        result: users.length,\r\n        data:users\r\n    })\r\n})\r\nexports.getOneUser =asyncHandler(async (req, res, next) => {\r\n    const id = req.params.id;\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        return next(new AppError(\"Invalid user ID format\", 400));\r\n    }\r\n    const user = await User.findById(id);\r\n    if (!user) {\r\n        return next(new AppError(\"user not found\",404))\r\n    }\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data:user\r\n    })\r\n})\r\nexports.createUser =asyncHandler( async (req,res,next) => {\r\n    const user = await User.create({\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    password: req.body.password,\r\n    passwordConfirm: req.body.passwordConfirm,\r\n    });\r\n    res.status(201).json({\r\n    status: 'success',\r\n    data: user,\r\n  });\r\n})\r\nexports.updateUser =asyncHandler( async(req, res, next) => {\r\n    const id = req.params.id;\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        return next(new AppError(\"Invalid user ID format\", 400));\r\n    }\r\n    const user = await User.findById(id);\r\n    if (!user) {\r\n        return next(new AppError(\"user not found\",404))\r\n    }\r\n    const newUser = await User.findByIdAndUpdate(id, req.body, {\r\n        runValidators: true,\r\n        new:true\r\n    })\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data:newUser\r\n    })\r\n})\r\nexports.deleteUser = asyncHandler(async (req,res,next) => {\r\n    const id = req.params.id;\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        return next(new AppError(\"Invalid user ID format\", 400));\r\n    }\r\n    const user = await User.findByIdAndDelete(id);\r\n    if (!user) {\r\n        return next(new AppError(\"user not found\",404))\r\n\r\n    }\r\n    return res.status(200).json({\r\n            status: \"succes\",\r\n            message:\"user is deleted\"\r\n        })\r\n})"],"file":"userController.dev.js"}