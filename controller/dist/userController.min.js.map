{"version":3,"sources":["userController.js"],"names":["User","require","asyncHandler","mongoose","exports","getUsers","req","res","search","users","regeneratorRuntime","async","_context","prev","next","AppError","query","$or","name","$regex","$options","email","awrap","find","_id","$ne","user","sent","status","json","length","stop","id","_context2","params","Types","ObjectId","isValid","abrupt","findById","createUser","_context3","create","body","password","passwordConfirm","data","updateUser","newUser","_context4","findByIdAndUpdate","runValidators","deleteUser","_context5","findByIdAndDelete","message"],"mappings":"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","file":"userController.min.js","sourcesContent":["const User = require(\"../models/user\");\r\nconst asyncHandler = require('express-async-handler');\r\nconst AppError=require('../utils/AppError');\r\nconst mongoose = require(\"mongoose\");\r\n    \r\nexports.getUsers = asyncHandler(async (req, res, next) => {\r\n    const search = req.query.search ? {\r\n        $or:[\r\n            { name: { $regex: req.query.search, $options: 'i' } },\r\n            { email: { $regex: req.query.search, $options: 'i' } }\r\n        ],\r\n    }: {};\r\n\r\n    const users = await User.find(search).find({_id:{$ne:req.user._id}});\r\n    res.status(200).json({\r\n        status: \"success\",\r\n        result: users.length,\r\n        data:users\r\n    })\r\n})\r\nexports.getOneUser =asyncHandler(async (req, res, next) => {\r\n    const id = req.params.id;\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        return next(new AppError(\"Invalid user ID format\", 400));\r\n    }\r\n    const user = await User.findById(id);\r\n    if (!user) {\r\n        return next(new AppError(\"user not found\",404))\r\n    }\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data:user\r\n    })\r\n})\r\nexports.createUser =asyncHandler( async (req,res,next) => {\r\n    const user = await User.create({\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    password: req.body.password,\r\n    passwordConfirm: req.body.passwordConfirm,\r\n    });\r\n    res.status(201).json({\r\n    status: 'success',\r\n    data: user,\r\n  });\r\n})\r\nexports.updateUser =asyncHandler( async(req, res, next) => {\r\n    const id = req.params.id;\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        return next(new AppError(\"Invalid user ID format\", 400));\r\n    }\r\n    const user = await User.findById(id);\r\n    if (!user) {\r\n        return next(new AppError(\"user not found\",404))\r\n    }\r\n    const newUser = await User.findByIdAndUpdate(id, req.body, {\r\n        runValidators: true,\r\n        new:true\r\n    })\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data:newUser\r\n    })\r\n})\r\nexports.deleteUser = asyncHandler(async (req,res,next) => {\r\n    const id = req.params.id;\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        return next(new AppError(\"Invalid user ID format\", 400));\r\n    }\r\n    const user = await User.findByIdAndDelete(id);\r\n    if (!user) {\r\n        return next(new AppError(\"user not found\",404))\r\n\r\n    }\r\n    return res.status(200).json({\r\n            status: \"success\",\r\n            message:\"user is deleted\"\r\n        })\r\n})"]}