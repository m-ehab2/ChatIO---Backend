"use strict";var asyncHandler=require("express-async-handler"),Chat=require("../models/chat"),User=require("../models/user"),AppError=require("../utils/AppError");exports.accessChat=asyncHandler(function(r,s){var a,t,n,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("in chat"),a=r.body.userId,e.next=4,regeneratorRuntime.awrap(Chat.find({$and:[{users:{$elemMatch:{$eq:r.user._id}}},{users:{$elemMatch:{$eq:a}}}]}).populate("users","-password").populate("message"));case 4:return t=e.sent,e.next=7,regeneratorRuntime.awrap(User.populate(t,{path:"message.sender",select:"name image email"}));case 7:if(!(0<(t=e.sent).length)){e.next=12;break}s.status(200).json({status:"success",data:t[0]}),e.next=22;break;case 12:return n={users:[r.user._id,a],chatName:"sender",isGroupChat:!1},e.next=15,regeneratorRuntime.awrap(Chat.create(n));case 15:return u=e.sent,e.next=18,regeneratorRuntime.awrap(Chat.findOne({_id:u._id}).populate("users","-password"));case 18:if(c=e.sent){e.next=21;break}throw new AppError("the chat not exist",400);case 21:s.status(201).json({status:"success",data:c});case 22:case"end":return e.stop()}})});
//# sourceMappingURL=chatController.min.js.map
