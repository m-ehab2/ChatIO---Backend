{"version":3,"sources":["messageController.js"],"names":["asyncHandler","require","Message","User","Chat","exports","sendMessage","req","res","next","body","content","chatId","create","sender","user","id","chat","message","console","log","populate","path","select","findByIdAndUpdate","latestMessage","status","json","data","getMessages","params","find","messages"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAD,CAAvB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAApB;;AAEAI,OAAO,CAACC,WAAR,GAAsBN,YAAY,CAAC,iBAAOO,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACHF,GAAG,CAACG,IADD,EACvBC,OADuB,aACvBA,OADuB,EACdC,MADc,aACdA,MADc;AAAA;AAAA,0CAEXV,OAAO,CAACW,MAAR,CAAe;AAC/BC,YAAAA,MAAM,EAAEP,GAAG,CAACQ,IAAJ,CAASC,EADc;AAE/BL,YAAAA,OAAO,EAAPA,OAF+B;AAG/BM,YAAAA,IAAI,EAAEL;AAHyB,WAAf,CAFW;;AAAA;AAE3BM,UAAAA,OAF2B;AAO/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAP+B;AAAA,0CAQfhB,OAAO,CAACmB,QAAR,CAAiBH,OAAjB,EAAyB;AAAEI,YAAAA,IAAI,EAAE,QAAR;AAAkBC,YAAAA,MAAM,EAAE;AAA1B,WAAzB,CARe;;AAAA;AAQ/BL,UAAAA,OAR+B;AAS/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,GAAC,MAApB;AAT+B;AAAA,0CAUfhB,OAAO,CAACmB,QAAR,CAAiBH,OAAjB,EAA0B;AAAEI,YAAAA,IAAI,EAAE;AAAR,WAA1B,CAVe;;AAAA;AAU/BJ,UAAAA,OAV+B;AAW/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,GAAC,IAApB;AAX+B;AAAA,0CAYff,IAAI,CAACkB,QAAL,CAAcH,OAAd,EAAuB;AAAEI,YAAAA,IAAI,EAAE,YAAR;AAAsBC,YAAAA,MAAM,EAAE;AAA9B,WAAvB,CAZe;;AAAA;AAY/BL,UAAAA,OAZ+B;AAAA;AAAA,0CAazBd,IAAI,CAACoB,iBAAL,CAAuBZ,MAAvB,EAA+B;AAClCa,YAAAA,aAAa,EAAEP;AADmB,WAA/B,CAbyB;;AAAA;AAgB/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,GAAC,IAApB;AAEAV,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,YAAAA,MAAM,EAAE,SADS;AAEjBE,YAAAA,IAAI,EAAEV;AAFW,WAArB;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAAlC;AAuBAb,OAAO,CAACwB,WAAR,GAAsB7B,YAAY,CAAC,kBAAOO,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBG,UAAAA,MADuB,GACZL,GAAG,CAACuB,MADQ,CACvBlB,MADuB;AAAA;AAAA,0CAERV,OAAO,CAAC6B,IAAR,CAAa;AAAEd,YAAAA,IAAI,EAAEL;AAAR,WAAb,EAClBS,QADkB,CACT,MADS,EACDA,QADC,CACQ,QADR,EACkB,kBADlB,CAFQ;;AAAA;AAEzBW,UAAAA,QAFyB;AAI/BxB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,YAAAA,MAAM,EAAE,SADS;AAEjBE,YAAAA,IAAI,EAACI;AAFY,WAArB;;AAJ+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAAlC","sourcesContent":["const asyncHandler = require('express-async-handler');\r\nconst Message = require('../models/message');\r\nconst User = require('../models/user');\r\nconst Chat = require('../models/chat');\r\n\r\nexports.sendMessage = asyncHandler(async (req, res, next) => {\r\n    const { content, chatId } = req.body;\r\n    let message = await Message.create({\r\n        sender: req.user.id,\r\n        content,\r\n        chat: chatId\r\n    })\r\n    console.log(message)\r\n    message = await Message.populate(message,{ path: 'sender', select: 'name image' })\r\n    console.log(message+\"bhbh\")\r\n    message = await Message.populate(message, { path: 'chat' })\r\n    console.log(message+\"nb\")\r\n    message = await User.populate(message, { path: 'chat.users', select: 'name image email' })\r\n    await Chat.findByIdAndUpdate(chatId, {\r\n       latestMessage: message\r\n    })\r\n    console.log(message+\"nb\")\r\n\r\n    res.status(201).json({\r\n        status: \"success\",\r\n        data: message\r\n    })  \r\n})\r\nexports.getMessages = asyncHandler(async (req, res, next) => {\r\n    const { chatId } = req.params;\r\n    const messages = await Message.find({ chat: chatId })\r\n        .populate('chat').populate('sender', 'name image email');\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data:messages\r\n    })\r\n\r\n})"],"file":"messageController.dev.js"}