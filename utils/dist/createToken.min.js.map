{"version":3,"sources":["createToken.js"],"names":["jwt","require","signToken","id","userId","process","env","SECRET_KEY","expiresIn","JWT_EXPIRES","res","expires","Date","now","JWT_COOKIE_EXPIRES_IN","httpOnly","secure","req","headers","createToken","cookie"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBACdC,UAAY,SAACC,GADbH,OAAMC,IAAAA,KAAQ,CAAAG,OAAAD,GAApBE,QAAAC,IAAAC,WAAA,CAGQC,UAAWH,QAAQC,IAAIG,eADTL,YAAQD,SAAAA,EAAAA,EAAAA,GAAnB,IAAyBE,EAAYE,UAArCJ,GAMNO,OALGF,EAAAA,OAAWH,MAAQC,EAAIG,CAD3BE,QAAA,IAAAC,KAAAA,KAAAC,MAAA,GAAAR,QAAAC,IAAAQ,sBAAA,GAAA,GAAA,KADJC,UAAA,EAUQC,OAAQC,EAAID,QAA+C,UAArCC,EAAIC,QAAQ,qBALpCC,SAAc,SAEXC,GAGDJ,OAAAA,QAAYA","file":"createToken.min.js","sourcesContent":["const jwt = require('jsonwebtoken');\r\nconst signToken = (id) => {\r\n    return jwt.sign({ userId: id }, process.env.SECRET_KEY, {\r\n        expiresIn: process.env.JWT_EXPIRES\r\n    })\r\n}\r\nconst createToken = (id, req, res) => {\r\n    const token = signToken(id);\r\n     res.cookie('jwt', token, {\r\n        expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\r\n        httpOnly: true,\r\n        secure: req.secure || req.headers['x-forwarded-proto'] === 'https',\r\n        sameSite: 'none',\r\n     });\r\n    return token\r\n}\r\n\r\nmodule.exports = createToken;"]}